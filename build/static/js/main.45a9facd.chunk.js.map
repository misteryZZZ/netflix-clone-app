{"version":3,"sources":["firebase.js","Nav.js","axios.js","Requests.js","Banner.js","Row.js","screens/HomeScreen.js","screens/SignUpScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Nav","useState","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","useEffect","addEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","process","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","string","n","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","name","title","original_name","overview","substring","Row","fetchUrl","isLargeRow","movies","setMovies","console","log","map","poster_path","Fragment","id","HomeScreen","SignUpScreen","email","setEmail","password","setPassword","emailRef","useRef","passwordRef","type","ref","placeholder","e","preventDefault","createUserWithEmailAndPassword","then","user","alert","catch","error","message","signInWithEmailAndPassword","current","value","Login","signIn","setSignIn","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","selectUser","ProfileScreen","useSelector","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","exact","path","configureStore","reducer","userReducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","store","document","getElementById","URL","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.45a9facd.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDKqdbMNH_9o_JpzLH5mMP4Hruhm3bm2z8\",\r\n  authDomain: \"netflix-clone-app-49f56.firebaseapp.com\",\r\n  projectId: \"netflix-clone-app-49f56\",\r\n  storageBucket: \"netflix-clone-app-49f56.appspot.com\",\r\n  messagingSenderId: \"1001260735267\",\r\n  appId: \"1:1001260735267:web:7eea37d2be52635a82ca96\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };\r\nexport default db;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"./firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// redux\r\n// import {useDispatch,useSelector} from \"react-redux\";\r\n// import {selectUser, login, logout} from \"./features/userSlice\";\r\n\r\n// css\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  const [show, handleShow] = useState(false);\r\n  const history = useHistory();\r\n  // const dispatch = useDispatch();\r\n\r\n  const transitionNavBar = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBar);\r\n    return () => window.addEventListener(\"scroll\", transitionNavBar);\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <div className=\"nav__contents\">\r\n        <img\r\n          onClick={() => history.push(\"/\")}\r\n          className=\"nav__logo\"\r\n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"netflix-logo\"\r\n        />\r\n        <img\r\n          onClick={() => history.push(\"/profile\")}\r\n          className=\"nav__avatar\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          alt=\"netflix-avatar\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","const API_KEY = process.env.REACT_APP_API_KEY;\r\n// console.log(API_KEY);\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&Language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&Language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\n\r\n// css\r\nimport \"./Banner.css\";\r\nimport requests from \"./Requests\";\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    // calling fetchdata function inside useEffect\r\n    fetchData();\r\n  }, []);\r\n\r\n  // console.log(movie);\r\n\r\n  // truncate str function\r\n  const truncate = (string, n) => {\r\n    return string?.length > n ? string.substring(0, n - 1) + \"...\" : string;\r\n  };\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.name || movie?.title || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {truncate(`${movie?.overview}`, 200)}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\n\r\n// css\r\nimport \"./Row.css\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow = false }) => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    // calling fetchData function to set movie state from given api info\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  console.log(movies);\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) =>\r\n          // check if movie info is avaliable then load it\r\n          movie.poster_path || movie.backdrop_path ? (\r\n            <React.Fragment>\r\n              <img\r\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                key={movie?.id}\r\n                src={`${base_url}/${\r\n                  isLargeRow ? movie?.poster_path : movie?.backdrop_path\r\n                }`}\r\n                alt={movie?.name}\r\n              />\r\n            </React.Fragment>\r\n          ) : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Nav from \"../Nav\";\r\nimport Banner from \"../Banner\";\r\nimport Row from \"../Row\";\r\nimport requests from \"../Requests\";\r\n\r\n// css\r\nimport \"./HomeScreen.css\";\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <div className=\"homeScreen\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} isLargeRow />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} isLargeRow />\r\n      <Row\r\n        title=\"Action Movies\"\r\n        fetchUrl={requests.fetchActionMovies}\r\n        isLargeRow\r\n      />\r\n      <Row\r\n        title=\"Comedy Movies\"\r\n        fetchUrl={requests.fetchComedyMovies}\r\n        isLargeRow\r\n      />\r\n      <Row\r\n        title=\"Horror Movies\"\r\n        fetchUrl={requests.fetchHorrorMovies}\r\n        isLargeRow\r\n      />\r\n      <Row\r\n        title=\"Romance Movies\"\r\n        fetchUrl={requests.fetchRomanceMovies}\r\n        isLargeRow\r\n      />\r\n\r\n      <Row\r\n        title=\"Documentaries\"\r\n        fetchUrl={requests.fetchDocumentaries}\r\n        isLargeRow\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\n// firebase\r\nimport { auth } from \"../firebase\";\r\n\r\n// css\r\nimport \"./SignUpScreen.css\";\r\n\r\nconst SignUpScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((user) => {\r\n        alert(\"signup successful :) \");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    // cleaning input box\r\n    emailRef.current.value(\"\");\r\n    passwordRef.current.value(\"\");\r\n  };\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        alert(\"signIn successful :) \");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((user) => alert(\"signIn successful :)\"))\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"signupScreen\">\r\n      <form>\r\n        <h1>Sign In</h1>\r\n        <input type=\"email\" ref={emailRef} placeholder=\"Email\" />\r\n        <input type=\"password\" ref={passwordRef} placeholder=\"Password\" />\r\n        <button type=\"submit\" onClick={signIn}>\r\n          Sign In\r\n        </button>\r\n\r\n        <h4>\r\n          <span className=\"signupScreen__grey\">New to Netflix? </span>\r\n          <span className=\"signupScreen__link\" onClick={register}>\r\n            Sign Up now.{\" \"}\r\n          </span>\r\n        </h4>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","import React, { useState } from \"react\";\r\nimport SignUpScreen from \"./SignUpScreen\";\r\n\r\n// css\r\nimport \"./LoginScreen.css\";\r\n\r\nconst Login = () => {\r\n  const [signIn, setSignIn] = useState(false);\r\n  return (\r\n    <div className=\"loginScreen\">\r\n      <div className=\"loginScreen__Background\">\r\n        <img\r\n          className=\"loginScreen__logo\"\r\n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n          alt=\"\"\r\n        />\r\n        <button className=\"loginScreen__button\" onClick={() => setSignIn(true)}>\r\n          Sign in\r\n        </button>\r\n\r\n        <div className=\"loginScreen__gradient\" />\r\n      </div>\r\n\r\n      <div className=\"loginScreen__body\">\r\n        {signIn ? (\r\n          <SignUpScreen />\r\n        ) : (\r\n          <>\r\n            <h1>Unlimited films, Tv programmes and more.</h1>\r\n            <h2>Watch anywhere, Cancel at any time. </h2>\r\n            <h3>\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership.\r\n            </h3>\r\n\r\n            <div className=\"loginScreen__input\">\r\n              <form>\r\n                <input type=\"email\" placeholder=\"Email address\" />\r\n                <button\r\n                  className=\"loginScreen__getStarted\"\r\n                  onClick={() => setSignIn(true)}\r\n                >\r\n                  GET STARTED\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { auth } from \"../firebase\";\r\nimport Nav from \"../Nav\";\r\n\r\n// css\r\nimport \"./ProfileScreen.css\";\r\n\r\nconst ProfileScreen = () => {\r\n  const user = useSelector(selectUser);\r\n  console.log(user);\r\n  return (\r\n    <div className=\"profileScreen\">\r\n      <Nav />\r\n\r\n      <div className=\"profileScreen__body\">\r\n        <h1>Edit Profile</h1>\r\n\r\n        <div className=\"profileScreen__info\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"netflix-avatar\"\r\n          />\r\n\r\n          <div className=\"profileScreen__details\">\r\n            <h2>{user.email}</h2>\r\n\r\n            <div className=\"profileScreen__plans\">\r\n              <h3>Plans</h3>\r\n              <p>Renewal date: 29/09/2021</p>\r\n              <button>Subcribe</button>\r\n              <h4>\r\n                Netflix standard <span>1080p</span>\r\n              </h4>\r\n\r\n              <button>Subcribe</button>\r\n              <h4>\r\n                Netflix basic <span>480p</span>\r\n              </h4>\r\n\r\n              <button className=\"profileScreen__currentPlan\">\r\n                Current plan\r\n              </button>\r\n              <h4>\r\n                Netflix Premium <span>4k+HDR</span>\r\n              </h4>\r\n              <button\r\n                className=\"profileScreen__signOut\"\r\n                onClick={() => auth.signOut()}\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\n// react-router-dom\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { auth } from \"./firebase\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser, login, logout } from \"./features/userSlice\";\nimport Login from \"./screens/LoginScreen\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        // always write dispatch(logout()) // bcz without logout() it didnt logout directly\n        dispatch(logout());\n      }\n    });\n    return unsubscribe;\n  }, [dispatch]);\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <LoginScreen />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n\n            <Route exact path=\"/profile\">\n              <ProfileScreen />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}